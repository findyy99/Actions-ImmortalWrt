name: Build ImmortalWrt

on:
    workflow_dispatch:

env:
    REPO_URL: https://github.com/immortalwrt/immortalwrt
    REPO_BRANCH: openwrt-23.05
    # CLONE_COMMAND: git clone -b openwrt-23.05 --depth 1 https://github.com/immortalwrt/immortalwrt.git
    REPO_NAME: immortalwrt

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            # - name: Before freeing up disk space
            #   run: |
            #     echo "Before freeing up disk space"
            #     echo "=============================================================================="
            #     df -hT
            #     echo "=============================================================================="
      
            # - name: "Optimize Disk Space"
            #   uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.0"
            #   with:
            #     operate_sudo: "True"
            #     general_include: ".+"
            #     general_exclude: |-
            #       ^GCC$
            #       ^G\+\+$
            #       Clang
            #       LLVM
            #     docker_include: ".+"
            #     docker_prune: "True"
            #     docker_clean: "True"
            #     apt_prune: "True"
            #     apt_clean: "True"
            #     homebrew_prune: "True"
            #     homebrew_clean: "True"
            #     npm_prune: "True"
            #     npm_clean: "True"
            #     os_swap: "True"
      
            # - name: Freeing up disk space
            #   uses: easimon/maximize-build-space@master
            #   with: 
            #     root-reserve-mb: 2048
            #     swap-size-mb: 1
            #     remove-dotnet: 'true'
            #     remove-android: 'true'
            #     remove-haskell: 'true'
            #     remove-codeql: 'true'
            #     remove-docker-images: 'true'
      
            # - name: Free up disk space complete
            #   run: |
            #     echo "Free up disk space complete"
            #     echo "=============================================================================="
            #     df -hT
            #     echo "=============================================================================="

            - name: Checkout
              uses: actions/checkout@v4

            - name: Clone immortalwrt code
              run: |
                  git clone --depth=1 $REPO_URL -b $REPO_BRANCH $REPO_NAME

            - name: Copy config to source code
              run: |
                  sudo apt install -y tree
                  tree
                  pwd
                  cp -f .config feeds.conf.default diy.sh immortalwrt
                  pwd

            - name: Initialization environment
              run: |
                  # sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

            - name: Update and install feeds
              run: |
                  cd $REPO_NAME
                  chmod +x diy.sh
                  ./diy.sh
                  # ./scripts/feeds update -a && ./scripts/feeds install -a

            - name: Copy config to source code
              run: |
                  cp -f .config feeds.conf.default diy.sh $REPO_NAME/

            - name: Build immortalwrt
              id: compile
              run: |
                  cd $REPO_NAME
                  echo -e "$(nproc) thread compile"
                  # make -j$(nproc) || make -j1 || make -j1 V=s
                  # echo "status=success" >> $GITHUB_OUTPUT
                  sed -E 's/CONFIG_TARGET_(.*)_DEVICE_(.*)=y/immortalwrt-\1-\2/' > DEVICE_NAME

                  echo "DEVICE_NAME=_$(cat DEVICE_NAME)"



          #  # Set the full name of the rootfs.tar.gz file to an environment variable
          #   - name: Set rootfs file name
          #     id: set-filename
          #     run: |
          #         file_path=$(find . -type f -name "*rootfs.tar.gz" | head -n 1)
          #         file_name=$(basename "$file_path")
          #         echo "rootfs_file_name=$file_name" >> $GITHUB_ENV
          #         echo "rootfs_full_path=$file_path" >> $GITHUB_ENV

          #     # Upload rootfs.gz file using its full name
          #   - name: Upload rootfs.gz file
          #     uses: actions/upload-artifact@v4
          #     with:
          #       name: ${{ env.rootfs_file_name }}
          #       path: ${{ env.rootfs_full_path }}
